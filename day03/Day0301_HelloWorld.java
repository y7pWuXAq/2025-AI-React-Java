/**
 * - Java 주석
*/

// 한줄 주석

/* Java 문법 규칙
 *  - 파일명 규칙 : 첫글자는 알파벳 대문자 시작, 확장자는 .java
 * - JAVA 프로그램은 클래스로 시작
 * - 클래스 이름은 파일명과 동일해야 함
 * - 개발하는 java 프로그램이 여러개인 경우
 *   -> 1개의 java 파일 내 클래스에는 main() 함수가 존재해야 함
 *   -> main() 함수가 실행 시 시작점(진입점)이 됨
*/

/* 접근제한자
    - public : 외부 클래스에서 접근 가능
    - protected : 패키지 내에서만 접근 가능
    - provate : 외부에서 접근 불가능
 - 클래스 이름 : 대문자로 시작(파일명과 동일)
*/

public class Day0301_HelloWorld {
    /* class 내에 프로그램 처리
     *  - 멤버 변수, 멤버 함수를 이용해서 프로그래밍을 함
     *  - 자바에서는 클래스 내에 선언된 변수와 함수를 멤버라고 함
     *    (특정 함수 내에 선언된 변수는 멤버가 아닌 일반 변수라고 함)
     *  - 멤버 변수들은 특정 함수에 속하지 않고, 상위에 선언된 변수를 의미하기도 함
     *  - 특정 함수 내에서 멤버 변수를 사용할 때는 this 속성을 사용하기도 함
    */

    /***
     * 클래스 시작 함수(메서드) 생성
     * - static : 정적 변수 또는 정적 메소드(함수) 또는 클래스 정의 시 사용
     *          : 정적이라는 의미는 메모리에 올려 놓고 사용한다는 의미
     *          : 별도의 선언이나 정의 없이 사용 가능(이미 선언 및 정의가 되었기 때문)
     *          : main 메소드(함수)는 Java의 시작점을 의미함
     *          : 라이브러리 규칙으로 만들어 놓은 함수이며 실행 시 main 함수는 메모리에 자동으로 올려놓고 호출하여 사용
     * - 리턴타입 정의 : void, 일반변수타입, 여러개의 값을 가지는 타입, 객체 타입 등등..
     * @param arg
    */

    // 클래스 시작 함수(메소드) 생성
    public static void main(String[] args) {
        // 이곳에 시작 프로그램을 작성

        // 콘솔(프롬프트창)에 문자열 출력
        System.out.println("자바 시작합니다! \n 줄바꿈 \t << 탭!");
        System.out.println("syso : 프린트 코드 자동완성!");
    }
    
    /**
     * Day0302_Variavles 신규 자바 파일 생성
    */
}
